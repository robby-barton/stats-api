services:
  updater:
    container_name: updater
    build: .
    restart: unless-stopped
    network_mode: host
    environment:
      PG_HOST: ${PG_HOST}
      PG_PORT: ${PG_PORT}
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_DBNAME: ${PG_DBNAME}
      PG_SSLMODE: ${PG_SSLMODE} 
      TZ: ${TZ:-America/New_York}
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: statsdb
    image: postgres:16-alpine
    restart: unless-stopped
    network_mode: host
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      TZ: ${TZ:-America/New_York}
      PGTZ: ${TZ:-America/New_York}
    ports:
      - 5432:5432
    volumes:
      - ${DB_DATA}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
